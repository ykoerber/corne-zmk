/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define SYMBOL 1
#define NUMBER 2
#define NAV 3
#define SETTINGS 4
#define INTELLIJ 5

//push-to-talk hotkey
#define PTT LG(LA(LC(LS(G))))

#define COMBO_TIMEOUT 50

/ {

        ///  0  1  2  3  4  5      6  7  8  9 10 11
        /// 12 13 14 15 16 17     18 19 20 21 22 23
        /// 24 25 26 27 28 29     30 31 32 33 34 35
        ///          36 37 38     39 40 41

     combos {
        compatible = "zmk,combos";
        // ptt
        combo_ptt {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <16 37>;
            bindings = <&kp PTT>;
        };  
        //intellij layer
        combo_ptt {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <19 40>;
            bindings = <&to INTELLIJ>;
        };  

        //mute
        combo_mute {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <5 6>;
            bindings = <&kp LG(LA(LC(LS(M))))>;
        };      

        // caps word
        combo_caps_word {
            timeout-ms = <COMBO_TIMEOUT>;
            key-positions = <0 11>;
            bindings = <&caps_word>;
        };
    };

    behaviors {
    //     //intellij: start app in debug with one tap. stop it with two taps
        td_intj_debug: td_intj_debug {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_INTELLIJ_DEBUG";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(F2)>, <&kp LA(LS(F9))>;
        };

        //intellij: tap dance for: open class | open file
        td_intj_files: td_intj_files {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_INTELLIJ_FILES";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LC(LS(K))>, <&kp LC(LS(N))>;
        };

        //sticky keys with quick-release. avoid that the more than key is affected by the sticky key. happens if the first key after the sticky is hold down
        skq: sticky_key_quick_release {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK_RELEASE";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
    };
        
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &skq LSHFT &kp Q  &kp W  &kp E             &kp R            &kp T           &kp Y &kp U             &kp I               &kp O           &kp P           &skq LSHFT
   &kp BSPC  &kp A  &kp S  &kp D   &kp F  &kp G           &kp H &kp J   &kp K     &kp L   &kp SEMI   &kp RET
   &kp TAB   &kp Z  &kp X  &kp C             &kp V            &kp B           &kp N &kp M             &kp COMMA           &kp DOT         &kp ESC         &kp DEL
                                        &skq LCTRL    &kp SPACE       &to NAV         &to NUMBER              &to SYMBOL      &skq LALT
                        >;
                };
                symbol {
                        bindings = <
   &trans    &kp AT         &kp DLLR         &kp LPAR         &kp RPAR        &kp PRCNT &kp EXCL &kp QMARK         &kp PLUS         &kp STAR            &kp CARET      &trans
   &trans   &kp APOS   &kp SLASH   &kp LBKT   &kp RBKT  &kp DQT   &kp AMPS &kp EQUAL   &kp MINUS  &kp BACKSLASH  &kp GRAVE &trans
   &trans   &kp TILDE       &kp UNDERSCORE   &kp LBRC         &kp RBRC        &kp HASH  &kp PIPE &none             &kp LT           &kp GT              &kp COLON      &trans
                          	   &trans    &to DEFAULT      &trans          &trans    &trans   &trans
                        >;
                };

                number {
                        bindings = <
   &trans &none        &kp N7           &kp N8          &kp N9         &none            &none   &kp F7        &kp F8        &kp F9        &kp F10       &trans
   &trans &mt LWIN N0  &mt LALT N4      &mt LCTRL N5    &mt LSHFT N6   &kp DOT          &none   &mt LSHFT F4  &mt LCTRL F5  &mt LALT F6   &mt LWIN F11  &trans
   &trans &none        &kp N1           &kp N2          &kp N3         &kp COMMA        &none   &kp F1        &kp F2        &kp F3        &kp F12       &trans
                          	        &trans          &to DEFAULT    &trans           &trans  &trans        &trans
                        >;
                };

                nav {
                        bindings = <
&trans   &caps_word     &kp C_PREV &kp C_PLAY_PAUSE &kp C_NEXT  &kp C_MUTE          &trans      &kp PAGE_UP &kp UP        &kp PAGE_DOWN   &kp PAUSE_BREAK &trans
&trans   &kp LWIN       &kp LALT   &kp LCTRL        &kp LSHFT   &kp C_VOL_UP        &none       &kp LEFT    &kp DOWN      &kp RIGHT       &kp K_APP       &trans
&trans   &to SETTINGS   &kp LC(X)  &kp LC(C)        &kp LC(V)       &kp C_VOL_DN        &none       &kp HOME    &kp END       &none           &none     &trans
                               &trans           &to DEFAULT &trans              &trans      &trans   &trans
                        >;
                };

                bt {
                        bindings = <
&none    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &out OUT_BLE &out OUT_USB &none &none &none &none
&none    &none        &none        &none         &none         &bt BT_CLR              &none &none &none &none &none &none 
&none &none &none &none &none &none                                                    &none &none &none &none &none &none
                               &trans           &to DEFAULT &trans              &trans      &trans   &trans
                        >;
                };

                intellij {
                        bindings = <
&trans   &kp LC(Q)       &none         &kp LC(F1) &kp LA(LC(LS(T))) &kp LA(F12)          &none       &kp LA(F7) &none      &kp LA(F5)    &kp LA(N1) &trans
&trans    &kp LC(LS(S))   &kp LA(LC(LS(N2)))    &td_intj_debug &kp LA(LC(L))     &kp LA(INS)          &kp LC(P)   &none      &none      &kp LC(LS(E)) &none &trans
&trans    &kp LA(LC(LS(N1)))      &kp LC(LS(R)) &kp LA(N0)  &kp LA(GRAVE)     &kp LS(F11)          &kp LC(LS(A))       &td_intj_files      &kp LS(F2) &kp F2         &none &trans
                                       &trans     &to DEFAULT       &trans               &trans      &trans     &trans
                        >;
                };
        };
};
